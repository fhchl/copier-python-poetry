[project]
name = "{{ distribution_name }}"
version = "{{ version }}"
description = "{{ project_short_description }}"
readme = "README.md"
authors = [
  {name = "{{ author_name }}", email = "{{ author_email }}"},
]
license = "{{ license }}"
packages = [{include = "{{ package_name | replace('.', _copier_conf.sep) }}", from = "src"}]
requires-python = ">={{ python_version }}"
dependencies = [
  {% if package_type == "cli" %}
  "typer~=0.13.0",
  {% endif %}
]
{% if package_type == "cli" %}

[project.scripts]
{{ package_name.split('.')[-1] }} = "{{ package_name }}.cli:app"
{% endif %}

[dependency-groups]
dev = [
  "pytest~=7.4.2",
  "ipykernel~=6.29.4",
  "ruff ~=0.11.0",
  "pre-commit~=3.4.0",
  "bump2version~=1.0.1",
  "detect-secrets~=1.4.0",
  {% if generate_docs == "mkdocs" %}
  "mkdocstrings-python~=1.10.8",
  "mkdocs-material~=9.5.32",
  "mkdocs-gen-files~=0.5.0",
  "mkdocs-literate-nav~=0.6.1",
  {% endif %}
  {% if generate_docs == "pdoc" %}
  "pdoc~=14.6",
  {% endif %}
  {% if testing_framework == "pytest" %}
  "pytest-mock~=3.11.1",
  {% endif %}
  {% if type_checker == "mypy" %}
  "mypy~=1.11.2",
  {% endif %}
]
jupyter = [
  "nbdime~=4.0.1",
  "jupyterlab~=4.2.2"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/{{ package_name.split('.')[0] }}"]

[tool.ruff]
line-length = {{ max_line_length }}

[tool.ruff.lint]
ignore = []
pydocstyle.convention = "google"


[tool.pytest.ini_options]
pythonpath = "src"
{% if type_checker == "mypy" %}

[tool.mypy]
exclude = ["tests/*", "docs/*"]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
{% if type_checker_strictness == "strict" %}
disallow_untyped_defs = true
{% endif %}
{% endif %}
